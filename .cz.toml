[tool.commitizen]
name = "cz_customize"
version = "0.0.1"
tag_format = "$major.$minor.$patch"
version_scheme = "semver"
update_changelog_on_bump = true
annotated_tag = false
version_files = [
    ".cz.toml:version",
]

[tool.commitizen.customize]
message_template = "{{change_type}}({{scope}}): {{message}}"
example = "added(feat): this feature enables customize through config file (if generated by Renovate)"
schema = "<type>(<scope>): <body>"
schema_pattern = '(Draft: )?(added|removed|fixed|changed|bump)(:|\((feat|docs|test|tech|deps)\)): (.*)'
bump_pattern = '^(break|added\(feat\)|removed\(feat\)|fixed|changed\(deps\))'
bump_map = { "break" = "MAJOR", 'added\(feat\)' = "MINOR", 'removed\(feat\)' = "MINOR", 'changed\(deps\)' = "PATCH", 'added\(tech\)' = "PATCH", "fixed" = "PATCH" }
change_type_order = ["BREAKING CHANGE", "added", "removed", "changed", "fixed"]
commit_parser = '^(?P<change_type>added|removed|fixed|changed)(?P<scope>\(feat\)|\(docs\)|\(test\)|\(tech\)|\(deps\)): (?P<message>.*)?'
changelog_pattern = "^(added|removed|fixed|changed)?(!)?"
change_type_map = { "added" = "Added", "fixed" = "Fixed", "removed" = "Removed", "changed" = "Changed" }


[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
message = "What is the type of change you're committing?"
choices = [
    "added",
    "removed",
    "fixed",
    "changed",
    "bump"
]

[[tool.commitizen.customize.questions]]
type = "list"
name = "scope"
message = "What is the scope of this change ?"
choices = [
    "feat",
    "docs",
    "test",
    "tech",
    "deps"
]

[[tool.commitizen.customize.questions]]
type = "input"
name = "message"
message = "Write a short, imperative tense description of the change : "
